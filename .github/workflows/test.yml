name: Build bitcoind on push, or PR to master

on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]

jobs:
  build:
    name: Build Bitcoind
    runs-on: ubuntu-18.04

    env:
      QEMU_VERSION: v4.2.0
      DOCKER_BUILDKIT: 1

    strategy:
      fail-fast: false
      matrix:
        subver:
          - 0.16
#          - 0.17
#          - 0.18
#          - 0.19

        arch:
          - amd64
          - arm64
          - arm32v7

    steps:
      - uses: actions/checkout@v2.0.0

      - name: Register self-compiled qemu
        if: matrix.arch != 'amd64'
        run: docker run --rm --privileged meedamian/simple-qemu:$QEMU_VERSION-${{ matrix.arch }} -p yes

#      # Alter `Dockerfile` to reference used architecture/image combos explicitly.  Places changed are:
#      #   * all `FROM` statements (ex. `FROM alpine…` -> `FROM arm64v8/alpine…`)
#      #   * BerkeleyDB `COPY` statement (`COPY --from=lncm/berkeleydb:db-4.8.30.NC` gets suffixed with ex. `-arm64`)
#      # `sed` `--expression`s change it in the following way:
#      #   1st: Matches all occurrences of `FROM alpine`, and injects arch prefix before `alpine`, ex: `arm64v8/alpine`
#      #   2nd: Matches BDB version, and appends "-${{ matrix.arch }}" to it (note that `&` represents match).
#      - name: Change Dockerfile to use arch-specific base images
#        if: matrix.arch != 'amd64'  &&  matrix.subver != '0.19'
#        run: |
#          CPU=${{ matrix.arch }}
#          if [[ "$CPU" == "arm64" ]]; then
#            CPU="arm64v8"
#          fi
#
#          sed -i "${{ matrix.subver }}/Dockerfile" \
#            -e "s|^FROM alpine|FROM $CPU/alpine|g" \
#            -e "s|db-4.8.30.NC|&-${{ matrix.arch }}|g"


#      - name: Build Bitcoind
#        if: matrix.arch != '0.19' || matrix.arch == 'amd64'
#        run: docker build  -t bitcoind  "${{ matrix.subver }}/"

      ## Set target $ARCH-itecture for Docker Image built in this job.  Used in `final` stage as: `FROM ${ARCH}/alpine:…`
      #   fmt:  amd64|arm32v7|arm64v8
      #   NOTE: Replaces `arm64` with `arm64v8`
      - name: Set ARCH (env var)
        if: matrix.arch != 'amd64'
        run: |
          ARCH=${{matrix.arch}}
          if [[ "${{matrix.arch}}" == "arm64" ]]; then
            ARCH="arm64v8"
          fi
          echo ::set-env name=ARCH::"${ARCH}"

      - name: Build Bitcoind
        run: docker build  --build-arg="ARCH=${ARCH}" -t bitcoind  "${{ matrix.subver }}/"

      - name: Print Bitcoind version
        run: |
          docker run --rm  --entrypoint=uname   bitcoind  -a
          docker run --rm                       bitcoind  --version
