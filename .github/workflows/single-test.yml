name: Test build bitcoind on push to vX.Z-test branch

env:
  APP: nolim1t/bitcoind
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

on:
  push:
    branches: [ 'v[0-9].[0-9]*-test' ]

jobs:
  build:
    name: Build bitcoind
    runs-on: ubuntu-18.04

    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - arm32v7
          - arm64v8

    env:
      QEMU_VERSION: v5.0.0
      DOCKER_BUILDKIT: 1

    steps:
      - uses: actions/checkout@v4

      - name: Detect version
        run: echo ::set-env name=MINOR::"$(echo "$GITHUB_REF" | sed -E 's|refs/heads/v(.*)-test|\1|g')"

      - name: Register self-compiled qemu
        if: matrix.arch != 'amd64'
        run: docker run --rm --privileged "meedamian/simple-qemu:$QEMU_VERSION-${{ matrix.arch }}" -p yes

      - name: Build ${{ env.APP }}
        run: >
          docker build "$MINOR/"
          --build-arg "ARCH=${{ matrix.arch }}"
          --build-arg "SOURCE=git"
          --tag       "${APP}:${MINOR}-${{ matrix.arch }}"
      
      - name: Push ${{ env.APP }} to docker hub
        run: >
          if [[ ! -z ${{ secrets.DOCKER_HUB_USER }} ]] && [[ ! -z ${{ secrets.DOCKER_USER }} ]] && [[ ! -z ${{ secrets.DOCKER_PASS }} ]]; then
            echo "Pushing to docker hub if credentials exist"
            echo ${{ secrets.DOCKER_PASS }} | docker login -u=${{ secrets.DOCKER_USER }} --password-stdin
            docker push "${{ env.APP }}:${MINOR}-${{ matrix.arch }}"
          else
            echo "Not pushing to docker up as credentials don't exist"
          fi

      - name: Show built image details
        run: docker images "$APP"

      - name: Run sanity checks
        env:
          DIR: /usr/local/bin
        run: |
          run() {
            ENTRYPOINT="${1:-$APP}"; shift
            ARGS=${*:-"--version"}

            printf "\n$ %s %s\n"  "$ENTRYPOINT"  "$ARGS"
            docker run --rm  --entrypoint "$ENTRYPOINT"  "${APP}:${MINOR}-${{ matrix.arch }}"  $ARGS
          }

          docker inspect "${APP}:${MINOR}-${{ matrix.arch }}" | jq '.'
          printf "\n"

          run bitcoind | head -n 1
          run bitcoin-cli
          run bitcoin-tx --help | head -n 1

          # If version higher, or equal than v0.18.0, also run `bitcoin-wallet` binary
          if [ "${MINOR#0.}" -ge "18" ]; then
            run bitcoin-wallet --help | head -n 1
          fi

          run uname -a
          run cat /etc/os-release
          run sha256sum "$DIR/bitcoind" "$DIR/bitcoin-cli"
